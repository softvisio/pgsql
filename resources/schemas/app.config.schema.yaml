- $id: env
  type: object
  properties: {}
  required: []

- $id: public-config
  type: object
  properties: {}

- $id: config
  type: object
  properties:
    dataRoot: { type: string }

    access:
      type: array
      items:
        type: object
        properties:
          host: { enum: [local, host, hostssl, hostnossl, hostgssenc, hostnogssenc] }

          database: { type: string }

          user: { type: string }

          address: { type: ["null", string] }

          auth-method: { enum: [trust, reject, scram-sha-256, md5, password, gss, sspi, ident, peer, ldap, radius, cert, pam, bsd] }

          auth-options: { type: ["null", string] }

        additionalProperties: false
        required: [host, database, user, address, auth-method, auth-options]

    backup:
      type: object
      properties:
        cron: { type: ["null", string] }
        numnerOfBackups: { type: integer, minimum: 0 }
      additionalProperties: false
      required: [numnerOfBackups]

    replication:
      type: object
      properties:
        port: { type: string, format: ip-port }
        username: { type: string }
        password: { type: string }

        primary:
          type: object
          properties:
            hostname: { type: string }
          additionalProperties: false
          required: [hostname]

        level1:
          type: object
          properties:
            hostname: { type: string }
            maxNumberOfSyncStanbdbuys: { type: integer, minimum: 0 }
          additionalProperties: false
          required: [hostname, maxNumberOfSyncStanbdbuys]

        level2:
          type: object
          properties:
            maxNumberOfSyncStanbdbuys: { type: integer, minimum: 0 }
          additionalProperties: false
          required: [maxNumberOfSyncStanbdbuys]

      additionalProperties: false
      required: [port, username, password]

    settings:
      type: ["null", object]

  additionalProperties: false
  required: [dataRoot, access, backup]
