#!/usr/bin/env -S docker stack deploy --with-registry-auth pgsql -c

version: "3.9"

# NOTE deploy
# docker stack deploy --with-registry-auth -c docker-stack.yaml pgsql
# docker node update --label-add pgsql=true <NODE-NAME>

services:
  pgsql:
    image: ghcr.io/zerocluster/pgsql-15
    init: true
    stop_grace_period: 5m

    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.pgsql == true"

    environment:
      NODE_ENV: production

    command: ""

    # configs:
    #   - { source: env.yaml, target: /var/local/package/env.yaml }

    networks: [main]

    ports:
      - { published: 5432, target: 5432 }

    volumes:
      - { type: tmpfs, target: /dev/shm, tmpfs: { size: 1073741824 } }
      - { type: volume, source: pgsql, target: /var/local/package/data }
      - { type: bind, source: /var/run/postgresql, target: /var/run/postgresql }

    build:
      context: .

  pgsql1:
    image: ghcr.io/zerocluster/pgsql-15
    depends_on: [pgsql]
    init: true
    stop_grace_period: 5m

    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.pgsql1 == true"

    environment:
      NODE_ENV: production

    command: --standby-level=1

    # configs:
    #   - { source: env.yaml, target: /var/local/package/env.yaml }

    networks: [main]

    # ports:
    # - { published: 5433, target: 5432 }

    volumes:
      - { type: tmpfs, target: /dev/shm, tmpfs: { size: 1073741824 } }
      - { type: volume, source: pgsql1, target: /var/local/package/data }
      - { type: bind, source: /var/run/postgresql, target: /var/run/postgresql }

    build:
      context: .

# configs:
#   env.yaml: { file: env.yaml }

networks:
  main: { external: true }

volumes:
  pgsql: { name: pgsql }
  pgsql1: { name: pgsql1 }

x-build:
  default_tag: latest
  auto_tags: [main, latest, next]
